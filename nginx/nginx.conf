events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Разрешенные IP адреса для HTTP
    geo $allowed_ip {
        default 0;
        111.111.111.111 1; # Прописать свой IP с которого будет осуществляться доступ к сервисам из вне
        127.0.0.1 1;        # localhost
        10.0.0.0/8 1;       # внутренние сети
        172.16.0.0/12 1;    # Docker сети
        192.168.0.0/16 1;   # локальные сети
        192.168.31.204 1;   # Added IP
    }

    # Prometheus Proxy
    server {
        listen 9090;
        server_name _;

        # Проверка разрешенного IP
        #if ($allowed_ip = 0) {
         #   return 403;
        #}

        location / {
            proxy_pass http://prometheus:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Grafana Proxy
    server {
        listen 3000;
        server_name _;

        # Проверка разрешенного IP
        #if ($allowed_ip = 0) {
        #    return 403;
        #}

        location / {
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket поддержка для Grafana
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # YouTube Bot API (без ограничений по IP)
    server {
        listen 8090;
        server_name _;

        location / {
            proxy_pass http://youtube-bot:8090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Telegram Bot API (без ограничений по IP)
    server {
        listen 8081;
        server_name _;

        location / {
            proxy_pass http://telegram-api:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
